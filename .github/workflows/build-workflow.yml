name: Docker Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version'
        required: true
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+'

env:
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} 
  IAM_ROLE_NAME: ${{ secrets.IAM_ROLE_NAME }}
  ECR_REPOSITORY_NAME: private-ecr-repo
  HELM_RELEASE_NAME: todo
  HELM_CHART_PATH: infrastructure/Helm

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Log intoGitHub Packages
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${{ github.actor }}" --password-stdin docker.pkg.github.com

    - name: Choose Tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "::set-output name=primary_tag::${{ inputs.version }}"
        else
          echo "::set-output name=primary_tag::${{ github.ref_name }}"
        fi
    
    - name: Print Tag Values
      run: |
        echo "Primary tag value: ${{ steps.tag.outputs.primary_tag }}"
    
    - name: Build Docker Image
      run: |
        docker build -t docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }} .

    - name: Push Docker Image with Primary Tag
      run: |
        docker push docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }}

    - name: Tag and Push Docker Image as Latest
      run: |
        docker tag docker.pkg.github.com/${{ github.repository }}/test-app2:${{ steps.tag.outputs.primary_tag }} docker.pkg.github.com/${{ github.repository }}/test-app2:latest
        docker push docker.pkg.github.com/${{ github.repository }}/test-app2:latest
    
    outputs:
      tag-version: ${{steps.tag.outputs.primary_tag}}


  helm-release:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Auth with OIDC
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/${{env.IAM_ROLE_NAME}}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      run: |
        curl -o kubectl https://amazon-eks.s3.${{ env.AWS_REGION }}.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Upgrade Helm Release
      run: |
        helm upgrade ${{ env.HELM_RELEASE_NAME }} ${{ env.HELM_CHART_PATH }} --set image.repository=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY_NAME }} --set image.tag=${{ needs.build-and-push-docker-image.outputs.tag-version }}